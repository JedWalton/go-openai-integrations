version: '3.8'
services:
  db:
    image: postgres:15
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ../.env

  salesbot-component:
    image: salesbot-component 
    build:
      context: ../frontend/salesbot-component
      dockerfile:  Dockerfile.dev
    ports:
      - '3000:3000'
    volumes:
      - ../frontend/salesbot-component:/app
      - /app/node_modules
    env_file:
      - ../.env
    command: /bin/sh -c "npm install && npm start"

  lucidify:
    image: lucidify
    build:
      context: ../frontend/lucidify
      dockerfile:  Dockerfile.dev
    ports:
      - '3001:3000'
    volumes:
      - ../frontend/lucidify:/app
      - /app/node_modules
    env_file:
      - ../.env
    command: /bin/sh -c "npm install && npm run dev"

  lucidify-api:
    image: backend/lucidify-api 
    build:
      context: ../backend/lucidify-api
      dockerfile:  Dockerfile.dev
    ports:
      - '8080:8080'
    volumes:
      - ../backend/lucidify-api:/app
    env_file:
      - ../.env

  weaviate:
    command:
    - --host
    - 0.0.0.0
    - --port
    - '8090'
    - --scheme
    - http
    image: semitechnologies/weaviate:1.21.2
    ports:
    - 8090:8090
    volumes:
    - weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'text2vec-openai'
      CLUSTER_HOSTNAME: 'node1'

  # openai-cookbook-q-and-a:
  #   build:
  #     context: ../backend/openai-cookbook-q-and-a
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - ../backend/openai-cookbook-q-and-a:/app
  #   ports:
  #     - "8081:8080"
  #   env_file:
  #     - ../.env

volumes:
  db:
    driver: local
  weaviate_data:
